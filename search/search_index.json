{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PET Detector Monte Carlo Project Introduction Welcome to the PET Detector Monte Carlo Project! In this guided exercise, you will learn how to simulate a novel medical Positron Emission Tomography (PET) detector using Monte Carlo methods and analyze the results towards producing precise images. The over-arching goal is to use simulation to explore how the cost of PET detctor construction can be reduced while maintainig clinicallly-relevant PET images. A low-cost PET detector mass-produced would have an enormous imapct in low- and middle-income countries across the world. Project Objectives You will: - Understand the principles of PET imaging and why simulations are useful in designing novel detectors. - Build and run a Monte Carlo simulation of a PET detector using OpenGATE 10. - Analyze the simulation outputs to: - Indentify coincidence events - Produce PET images with the classic Filtered Back Projection method. - Use your new expertise in simulation to investigate the effect on dector design choices on image quality. - Investigate AI/ML-based PET imaging techniques and their effects on image quality. Structure This project is divided into several sections: Background \u2013 Introduction to PET physics and Monte Carlo simulations. Setup \u2013 Installation instructions for necessary software. Simulation \u2013 Running the simulation and understanding the outputs. Analysis \u2013 Undertstanding the simulation output and basic imaging. Exercises \u2013 Guided tasks to explore different aspects of the detector design. Explore Further \u2013 Open-ended suggestions for independent investigation. Getting Started To begin, head over to the Setup section for installation instructions. Once everything is installed, move on to the Simulation to start running simulations!","title":"Home"},{"location":"#pet-detector-monte-carlo-project","text":"","title":"PET Detector Monte Carlo Project"},{"location":"#introduction","text":"Welcome to the PET Detector Monte Carlo Project! In this guided exercise, you will learn how to simulate a novel medical Positron Emission Tomography (PET) detector using Monte Carlo methods and analyze the results towards producing precise images. The over-arching goal is to use simulation to explore how the cost of PET detctor construction can be reduced while maintainig clinicallly-relevant PET images. A low-cost PET detector mass-produced would have an enormous imapct in low- and middle-income countries across the world.","title":"Introduction"},{"location":"#project-objectives","text":"You will: - Understand the principles of PET imaging and why simulations are useful in designing novel detectors. - Build and run a Monte Carlo simulation of a PET detector using OpenGATE 10. - Analyze the simulation outputs to: - Indentify coincidence events - Produce PET images with the classic Filtered Back Projection method. - Use your new expertise in simulation to investigate the effect on dector design choices on image quality. - Investigate AI/ML-based PET imaging techniques and their effects on image quality.","title":"Project Objectives"},{"location":"#structure","text":"This project is divided into several sections: Background \u2013 Introduction to PET physics and Monte Carlo simulations. Setup \u2013 Installation instructions for necessary software. Simulation \u2013 Running the simulation and understanding the outputs. Analysis \u2013 Undertstanding the simulation output and basic imaging. Exercises \u2013 Guided tasks to explore different aspects of the detector design. Explore Further \u2013 Open-ended suggestions for independent investigation.","title":"Structure"},{"location":"#getting-started","text":"To begin, head over to the Setup section for installation instructions. Once everything is installed, move on to the Simulation to start running simulations!","title":"Getting Started"},{"location":"analysis/","text":"Instructions on the data analysis will go here","title":"Data Analysis & Imaging"},{"location":"background/","text":"The Background Info on Medical PET Imaging will go here.","title":"Background"},{"location":"exercises/","text":"Instructions for exercises will go here.","title":"Exercises"},{"location":"explore/","text":"Instructions for further explorations will go here. Time-Of-Flight PET Filtered Back-Projection with DL","title":"Explore Further"},{"location":"setup/","text":"The setup instructions will go here.","title":"Setup"},{"location":"simulation/","text":"Step-by-Step Guide: Running and Analyzing the PET Detector Simulation Introduction In this section, you'll learn how to run the Monte Carlo simulation of the novel PET detector and analyze the generated data. We'll guide you through: Running the Simulation : Executing the sim_picopet.py script to simulate the PET detector's response. Understanding the Output : Exploring the generated data files and their significance. Analyzing Coincidence Events : Using the provided Jupyter notebook to process and visualize the results. 1. Running the Simulation Assuming you've completed the setup as described in the Setup section, follow these steps: Navigate to the Simulation Directory : Open your terminal or command prompt and change to the directory containing the sim_picopet.py script. cd path/to/your/simulation/directory Execute the Simulation Script: Run the simulation by executing : python sim_picopet.py This script sets up the PET detector geometry, defines the radioactive source, and configures the simulation parameters. Upon execution, it will generate output data files containing the simulation results. 2. Understanding the Output After running the simulation, you'll find several output files in your directory. Key files include: output.root: A ROOT file containing detailed information about each detected event. coincidences.txt: A text file listing detected coincidence events, crucial for image reconstruction. Understanding these files is essential for analyzing the detector's performance and the quality of the simulated PET scan. 3. Analyzing Coincidence Events To analyze the simulation data: Open the Jupyter Notebook: Launch Jupyter Notebook from your terminal : jupyter notebook Alternatively you can open notebooks in an IDE, e.g, VSCode Open the recoCoincidences.ipynb notebook provided with the tutorial files. 2. Explore the Notebook : The notebook guides you through: 1. Loading Data : Reading the coincidences.txt file into a manageable format. Data Visualization : Plotting histograms and scatter plots to visualize spatial and energy distributions. Basic Image Reconstruction : Applying simple algorithms to reconstruct images from the coincidence data. Each section includes code snippets and explanations to help you understand the analysis process. Next Steps With the basic simulation and analysis up and running, it's time to work through some active excerises. Proceed to the Exercises section.","title":"Simulation"},{"location":"simulation/#step-by-step-guide-running-and-analyzing-the-pet-detector-simulation","text":"","title":"Step-by-Step Guide: Running and Analyzing the PET Detector Simulation"},{"location":"simulation/#introduction","text":"In this section, you'll learn how to run the Monte Carlo simulation of the novel PET detector and analyze the generated data. We'll guide you through: Running the Simulation : Executing the sim_picopet.py script to simulate the PET detector's response. Understanding the Output : Exploring the generated data files and their significance. Analyzing Coincidence Events : Using the provided Jupyter notebook to process and visualize the results.","title":"Introduction"},{"location":"simulation/#1-running-the-simulation","text":"Assuming you've completed the setup as described in the Setup section, follow these steps: Navigate to the Simulation Directory : Open your terminal or command prompt and change to the directory containing the sim_picopet.py script. cd path/to/your/simulation/directory Execute the Simulation Script: Run the simulation by executing : python sim_picopet.py This script sets up the PET detector geometry, defines the radioactive source, and configures the simulation parameters. Upon execution, it will generate output data files containing the simulation results.","title":"1. Running the Simulation"},{"location":"simulation/#2-understanding-the-output","text":"After running the simulation, you'll find several output files in your directory. Key files include: output.root: A ROOT file containing detailed information about each detected event. coincidences.txt: A text file listing detected coincidence events, crucial for image reconstruction. Understanding these files is essential for analyzing the detector's performance and the quality of the simulated PET scan.","title":"2. Understanding the Output"},{"location":"simulation/#3-analyzing-coincidence-events","text":"To analyze the simulation data: Open the Jupyter Notebook: Launch Jupyter Notebook from your terminal : jupyter notebook Alternatively you can open notebooks in an IDE, e.g, VSCode Open the recoCoincidences.ipynb notebook provided with the tutorial files. 2. Explore the Notebook : The notebook guides you through: 1. Loading Data : Reading the coincidences.txt file into a manageable format. Data Visualization : Plotting histograms and scatter plots to visualize spatial and energy distributions. Basic Image Reconstruction : Applying simple algorithms to reconstruct images from the coincidence data. Each section includes code snippets and explanations to help you understand the analysis process.","title":"3. Analyzing Coincidence Events"},{"location":"simulation/#next-steps","text":"With the basic simulation and analysis up and running, it's time to work through some active excerises. Proceed to the Exercises section.","title":"Next Steps"}]}