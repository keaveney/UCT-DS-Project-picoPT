{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PET Detector Monte Carlo Tutorial Introduction Welcome to the PET Detector Monte Carlo Tutorial! In this guided exercise, you will learn how to simulate a novel medical Positron Emission Tomography (PET) detector using Monte Carlo methods and analyze the results. Learning Objectives By the end of this tutorial, you will: - Understand the principles of PET imaging and why simulations are necessary. - Run a Monte Carlo simulation of a PET detector using OpenGATE. - Analyze coincidence events and explore detector performance. - Modify simulation parameters to investigate their impact on data quality. Structure This tutorial is divided into several sections: 1. Background \u2013 Introduction to PET physics and Monte Carlo simulations. 2. Setup \u2013 Installation instructions for necessary software. 3. Step-by-Step Guide \u2013 Running the simulation and understanding the outputs. 4. Data Analysis \u2013 Working with the provided Jupyter notebook. 5. Exercises \u2013 Guided tasks to explore different aspects of the detector. 6. Explore Further \u2013 Open-ended suggestions for independent investigation. Getting Started To begin, head over to the Setup section for installation instructions. Once everything is installed, move on to the Step-by-Step Guide to start running simulations!","title":"Home"},{"location":"#pet-detector-monte-carlo-tutorial","text":"","title":"PET Detector Monte Carlo Tutorial"},{"location":"#introduction","text":"Welcome to the PET Detector Monte Carlo Tutorial! In this guided exercise, you will learn how to simulate a novel medical Positron Emission Tomography (PET) detector using Monte Carlo methods and analyze the results.","title":"Introduction"},{"location":"#learning-objectives","text":"By the end of this tutorial, you will: - Understand the principles of PET imaging and why simulations are necessary. - Run a Monte Carlo simulation of a PET detector using OpenGATE. - Analyze coincidence events and explore detector performance. - Modify simulation parameters to investigate their impact on data quality.","title":"Learning Objectives"},{"location":"#structure","text":"This tutorial is divided into several sections: 1. Background \u2013 Introduction to PET physics and Monte Carlo simulations. 2. Setup \u2013 Installation instructions for necessary software. 3. Step-by-Step Guide \u2013 Running the simulation and understanding the outputs. 4. Data Analysis \u2013 Working with the provided Jupyter notebook. 5. Exercises \u2013 Guided tasks to explore different aspects of the detector. 6. Explore Further \u2013 Open-ended suggestions for independent investigation.","title":"Structure"},{"location":"#getting-started","text":"To begin, head over to the Setup section for installation instructions. Once everything is installed, move on to the Step-by-Step Guide to start running simulations!","title":"Getting Started"},{"location":"background/","text":"The Background Info on Medical PET Imaging will go here.","title":"Background"},{"location":"tutorial/","text":"Step-by-Step Guide: Running and Analyzing the PET Detector Simulation Introduction In this section, you'll learn how to run the Monte Carlo simulation of the novel PET detector and analyze the generated data. We'll guide you through: Running the Simulation : Executing the sim_picopet.py script to simulate the PET detector's response. Understanding the Output : Exploring the generated data files and their significance. Analyzing Coincidence Events : Using the provided Jupyter notebook to process and visualize the results. 1. Running the Simulation Assuming you've completed the setup as described in the Setup section, follow these steps: Navigate to the Simulation Directory : Open your terminal or command prompt and change to the directory containing the sim_picopet.py script. ```bash cd path/to/your/simulation/directory Execute the Simulation Script: Run the simulation by executing : ```python sim_picopet.py This script sets up the PET detector geometry, defines the radioactive source, and configures the simulation parameters. Upon execution, it will generate output data files containing the simulation results.","title":"Step-by-Step Guide"},{"location":"tutorial/#step-by-step-guide-running-and-analyzing-the-pet-detector-simulation","text":"","title":"Step-by-Step Guide: Running and Analyzing the PET Detector Simulation"},{"location":"tutorial/#introduction","text":"In this section, you'll learn how to run the Monte Carlo simulation of the novel PET detector and analyze the generated data. We'll guide you through: Running the Simulation : Executing the sim_picopet.py script to simulate the PET detector's response. Understanding the Output : Exploring the generated data files and their significance. Analyzing Coincidence Events : Using the provided Jupyter notebook to process and visualize the results.","title":"Introduction"},{"location":"tutorial/#1-running-the-simulation","text":"Assuming you've completed the setup as described in the Setup section, follow these steps: Navigate to the Simulation Directory : Open your terminal or command prompt and change to the directory containing the sim_picopet.py script. ```bash cd path/to/your/simulation/directory Execute the Simulation Script: Run the simulation by executing : ```python sim_picopet.py This script sets up the PET detector geometry, defines the radioactive source, and configures the simulation parameters. Upon execution, it will generate output data files containing the simulation results.","title":"1. Running the Simulation"}]}